# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant configuration file for a Ubuntu VM running a datashield server as provisioned by the datashield_testdata
# puppet environment. By default the machine is given the private IP 192.168.2.6.
#
Vagrant.configure(2) do |config|
  # See https://docs.vagrantup.com. for vagrant config info

  # Remove 'puppet/environments/datashield_testdata/modules' if it exists
  system("/bin/rm -rf ../../puppet/environments/datashield_testdata/modules")

  # Puppetlabs blank ubuntu box
  config.vm.box = "puppetlabs/ubuntu-16.04-64-nocm"

  # Use cache if the plugin vagrant-cachier has been installed
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
  
  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.56.150"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Setup VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    #   # Display the VirtualBox GUI when booting the machine
    #   vb.gui = true
    # Customize the amount of memory on the VM:
    vb.memory = "6144"
  end
  #
  # Provisioning of the VM. Run the setup script. Then run r10k to install puppet modules. Then run the puppet
  # for the environment you wish to setup.
  #
  config.vm.provision :shell, :path => '../../scripts/ubuntu/setup.sh'
  config.vm.provision :shell, :inline => 'cd /tmp/vagrant-puppet/environments/datashield_testdata && r10k -v info puppetfile install'
  config.vm.provision "puppet" do |puppet|
    puppet.environment_path = "../../puppet/environments"
    puppet.environment = "datashield_testdata"
  end

  config.vm.provision "shell", inline: <<-SHELL
    sudo locale-gen en_GB.UTF-8
    sudo update-locale LANG="en_GB.UTF-8"

    sudo apt-get update
    sudo apt-get upgrade -y

    sudo iptables -I INPUT 6 -p tcp --dport 8787 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
    iptables-save | sudo tee /etc/iptables/rules.v4

    sudo apt-get install -y --allow-change-held-packages libcairo2-dev
    sudo apt-get install -y gdebi-core
    sudo curl https://download2.rstudio.org/server/xenial/amd64/rstudio-server-1.3.1093-amd64.deb --output /tmp/rstudio-server-1.3.1093-amd64.deb
    sudo gdebi -n /tmp/rstudio-server-1.3.1093-amd64.deb
    sudo rm -f /tmp/rstudio-server-1.3.1093-amd64.deb

    echo 'auth-timeout-minutes=0' | sudo tee -a /etc/rstudio/rserver.conf

    sudo apt-get install -y libgit2-dev libssl-dev libssh2-1-dev libxml2-dev libcurl4-gnutls-dev libfontconfig1-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev libgsl-dev
    sudo -i -u vagrant mkdir -p ~vagrant/R/x86_64-pc-linux-gnu-library/4.0
    sudo -i -u vagrant R -q -e "install.packages(c('devtools','covr'), dependencies=TRUE, repos='https://cloud.r-project.org')"
    sudo -i -u vagrant R -q -e "install.packages(c('fields','metafor','ggplot2','gridExtra','data.table'), dependencies=TRUE, repos='https://cloud.r-project.org')"
    sudo -i -u vagrant R -q -e "install.packages(c('DSI','DSOpal','DSLite'), dependencies=TRUE, repos='https://cloud.r-project.org')"
    sudo -i -u vagrant R -q -e "install.packages(c('DescTools','e1071'), dependencies=TRUE, repos='https://cloud.r-project.org')"
    sudo -i -u vagrant R -q -e "install.packages(c('RANN','reshape2'), dependencies=TRUE, repos='https://cloud.r-project.org')"

    sudo -i -u vagrant git clone https://github.com/datashield/dsBase.git -b master
    sudo -i -u vagrant git clone https://github.com/datashield/dsBaseClient.git -b master
  SHELL
end
